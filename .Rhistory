gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
gitcreds_get()
use_git_config(user.name = "AFraderaSola", user.email = "albertfradera85@hotmail.com")
library(usethis)
use_git_config(user.name = "AFraderaSola", user.email = "albertfradera85@hotmail.com")
gitcreds::gitcreds_set()
usethis::create_github_token()
gitcreds::gitcreds_set()
source("https://www.huber.embl.de/csama2022/install_packages.R")
source("https://www.huber.embl.de/csama2022/install_packages.R")
source("https://www.huber.embl.de/csama2022/install_packages.R")
source("https://www.huber.embl.de/csama2022/install_packages.R")
source("https://www.huber.embl.de/csama2022/install_packages.R")
library(DropletTestFiles)
raw.path <- getTestFile("tenx-2.1.0-pbmc4k/1.0.0/raw.tar.gz")
out.path <- file.path(tempdir(), "pbmc4k")
untar(raw.path, exdir=out.path)
library(DropletUtils)
fname <- file.path(out.path, "raw_gene_bc_matrices/GRCh38")
sce.pbmc <- read10xCounts(fname, col.names=TRUE)
sce.pbmc
install.packages("DropletTestFiles")
# Library
library(networkD3)
library(dplyr)
# A connection data frame is a list of flows with intensity for each flow
links <- data.frame(
source=c("group_A","group_A", "group_B", "group_C", "group_C", "group_E"),
target=c("group_C","group_D", "group_E", "group_F", "group_G", "group_H"),
value=c(2,3, 2, 3, 1, 3)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# Library
library(networkD3)
library(dplyr)
# A connection data frame is a list of flows with intensity for each flow
links <- data.frame(
source=c("Inlcuded at KO library", "Inlcuded at KO library","Not Inlcuded at KO library",
"Included at Screen", "Not Included at Screen", "Not Included at Screen"),
target=c("Included at Screen","Not Included at Screen", "Not included at Screen",
"Not Essential", "Not Essential", "Essential"),
value=c(15,3, 22, 15, 3, 19)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
library(networkD3)
library(dplyr)
# A connection data frame is a list of flows with intensity for each flow
links <- data.frame(
source=c("Inlcuded at KO library", "Inlcuded at KO library","Not Inlcuded at KO library",
"Included at Screen", "Not Included at Screen", "Not Included at Screen"),
target=c("Included at Screen","Not Included at Screen", "Not Included at Screen",
"Not Essential", "Not Essential", "Essential"),
value=c(15,3, 22, 15, 3, 19)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
# A connection data frame is a list of flows with intensity for each flow
links <- data.frame(
source=c("Inlcuded at KO library", "Inlcuded at KO library","Not Inlcuded at KO library",
"Included at Screen", "Not Included at Screen", "Not Included at Screen"),
target=c("Included at Screen","Not Included at Screen", "Not Included at Screen", "Not Included at Screen",
"Not Essential", "Not Essential", "Essential", "Unknown"),
value=c(15,3, 22, 15, 4, 19, 2)
)
# A connection data frame is a list of flows with intensity for each flow
links <- data.frame(
source=c("Inlcuded at KO library", "Inlcuded at KO library","Not Inlcuded at KO library",
"Included at Screen", "Not Included at Screen", "Not Included at Screen", "Not Included at Screen"),
target=c("Included at Screen","Not Included at Screen", "Not Included at Screen",
"Not Essential", "Not Essential", "Essential", "Unknown"),
value=c(15,3, 22, 15, 4, 19, 2)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
# A connection data frame is a list of flows with intensity for each flow
links <- data.frame(
source=c("RBP Candidates", "RBP Candidates", "Inlcuded at KO library", "Inlcuded at KO library","Not Inlcuded at KO library",
"Included at Screen", "Not Included at Screen", "Not Included at Screen", "Not Included at Screen"),
target=c("Not Inlcuded at KO library","Inlcuded at KO library","Included at Screen","Not Included at Screen", "Not Included at Screen",
"Not Essential", "Not Essential", "Essential", "Unknown"),
value=c(22,18,15,3, 22, 15, 4, 19, 2)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
library(readr)
IP_vs_KO <- read_csv("U:/Desktop/RBPs/NAR_Tables/IP_vs_KO.csv")
View(IP_vs_KO)
links <- data.frame(
source=c("RBP IP baits", "RBP IP baits",
"Not essential gene","Not essential gene", "Essential gene",
"Inlcuded at KO library", "Inlcuded at KO library", "Not inlcuded at KO library"),
target=c("Essential gene","Not essential gene",
"Inlcuded at KO library", "Not Included at Screen", "Not Included at Screen",
"Included at KO screen", "Not included at KO screen", "Not included at KO screen"),
value=c(21,19,
18, 1, 21,
15, 3, 22)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
links <- data.frame(
source=c("RBP IP baits", "RBP IP baits",
"Not essential gene","Not essential gene", "Essential gene",
"Inlcuded at KO library", "Inlcuded at KO library", "Not inlcuded at KO library"),
target=c("Essential gene","Not essential gene",
"Inlcuded at KO library", "Not included at KO screen", "Not included at KO screen",
"Included at KO screen", "Not included at KO screen", "Not included at KO screen"),
value=c(21,19,
18, 1, 21,
15, 3, 22)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
View(links)
View(links)
links <- data.frame(
source=c("RBP IP baits", "RBP IP baits",
"Not essential gene","Not essential gene", "Essential gene",
"Inlcuded at KO library", "Inlcuded at KO library", "Not inlcuded at KO library"),
target=c("Essential gene","Not essential gene",
"Inlcuded at KO library", "Not inlcuded at KO library", "Not inlcuded at KO library",
"Included at KO screen", "Not included at KO screen", "Not included at KO screen"),
value=c(21,19,
18, 1, 21,
15, 3, 22)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
remotes::install_github("davidsjoberg/ggsankey")
library(ggsankey)
View(links)
View(links)
RBP_IP_Candiates <- rep("RBP IP baits", 40)
Essential <- c(rep("Not essential gene", 19), rep("Essential gene", 21))
RBP_IP_Candiates <- rep("RBP IP baits", 40)
Essential <- c(rep("Not essential gene", 19), rep("Essential gene", 21))
Library <- c(rep("Included at KO library", 18), rep("Not included at KO library", 22))
RBP_IP_Candiates <- rep("RBP IP baits", 40)
Essential <- c(rep("Not essential gene", 19), rep("Essential gene", 21))
Library <- c(rep("Included at KO library", 18), rep("Not included at KO library", 22))
Screen <- c(rep("Included at KO screen", 15), rep("Not included at KO screen", 25))
d <- data.frame(cbind(RBP_IP_Candiates,Essential,Library,Screen))
View(d)
df <- d %>%
make_long(Hospital, Gender, Outcome)
df <- d %>%
make_long(RBP_IP_Candiates, Essential, Library, Screen)
View(df)
pl <- ggplot(df, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill = factor(node)
, label = node)
)
pl <- ggplot(df, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill = factor(node)
, label = node)
)
library(networkD3)
library(dplyr)
library(ggplot2)
library(ggsankey)
pl <- ggplot(df, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill = factor(node)
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = "black"
,show.legend = FALSE)
pl <- pl +geom_sankey_label(size = 3, color = "black", fill= "white", hjust = -0.5)
pl <- pl +  theme_bw()
pl
View(df)
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
View(df)
View(df)
View(d)
d <- data.frame(cbind(RBP_IP_Candiates,Essential,Library,Screen))
d$Essential <- factor(x = d$Essential, levels = c("Essential gene", "Not essential gene"))
df <- d %>%
make_long(RBP_IP_Candiates, Essential, Library, Screen)
pl <- ggplot(df, aes(x = x
, next_x = next_x
, node = node
, next_node = next_node
, fill = factor(node)
, label = node)
)
pl <- pl +geom_sankey(flow.alpha = 0.5
, node.color = "black"
,show.legend = FALSE)
pl <- pl +geom_sankey_label(size = 3, color = "black", fill= "white", hjust = -0.5)
pl <- pl +  theme_bw()
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
View(df)
unique(df$node)
df$node <- factor(x = df$node, levels = c"RBP IP baits", "Essential gene", "Not essential gene", "Included at KO library", "Not included at KO library", "Included at KO screen", "Not included at KO screen")
df$node <- factor(x = df$node, levels = c("RBP IP baits", "Essential gene", "Not essential gene", "Included at KO library", "Not included at KO library", "Included at KO screen", "Not included at KO screen"))
View(df)
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
View(df)
View(df)
unique(df$next_node)
RBP_IP_Candiates <- rep("RBP IP baits", 40)
Essential <- c(rep("Essential gene", 21), rep("Not essential gene", 19))
Library <- c( rep("Not included at KO library", 22), rep("Included at KO library", 18))
Screen <- c(rep("Not included at KO screen", 25), rep("Included at KO screen", 15))
d <- data.frame(cbind(RBP_IP_Candiates,Essential,Library,Screen))
d$Essential <- factor(x = d$Essential, levels = c("Essential gene", "Not essential gene"))
df <- d %>%
make_long(RBP_IP_Candiates, Essential, Library, Screen)
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
RBP_IP_Candiates <- rep("RBP IP baits", 40)
Essential <- c(rep("Not essential gene", 19), rep("Essential gene", 21))
Library <- c(rep("Included at KO library", 18), rep("Not included at KO library", 22))
Screen <- c(rep("Included at KO screen", 15), rep("Not included at KO screen", 25))
d <- data.frame(cbind(RBP_IP_Candiates,Essential,Library,Screen))
RBP_IP_Candiates <- rep("RBP IP baits", 40)
Essential <- c(rep("Not essential gene", 19), rep("Essential gene", 21))
Library <- c(rep("Included at KO library", 18), rep("Not included at KO library", 22))
Screen <- c(rep("Included at KO screen", 15), rep("Not included at KO screen", 25))
d <- data.frame(cbind(RBP_IP_Candiates,Essential,Library,Screen))
df <- d %>%
make_long(RBP_IP_Candiates, Essential, Library, Screen)
df$node <- factor(x = df$node, levels = c("RBP IP baits", "Essential gene", "Not essential gene", "Included at KO library", "Not included at KO library", "Included at KO screen", "Not included at KO screen"))
df$next_node
unique(df$next_node)
df$next_node <- factor(x = df$node, levels = c("Essential gene", "Not essential gene", "Included at KO library", "Not included at KO library", "Included at KO screen", "Not included at KO screen", NA))
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
RBP_IP_Candiates <- rep("RBP IP baits", 40)
Essential <- c(rep("Not essential gene", 19), rep("Essential gene", 21))
Library <- c(rep("Included at KO library", 18), rep("Not included at KO library", 22))
Screen <- c(rep("Included at KO screen", 15), rep("Not included at KO screen", 25))
d <- data.frame(cbind(RBP_IP_Candiates,Essential,Library,Screen))
df <- d %>%
make_long(RBP_IP_Candiates, Essential, Library, Screen)
# pl <- ggplot(df, aes(x = x
#                      , next_x = next_x
#                      , node = node
#                      , next_node = next_node
#                      , fill = factor(node)
#                      , label = node)
# )
# pl <- pl +geom_sankey(flow.alpha = 0.5
#                       , node.color = "black"
#                       ,show.legend = FALSE)
# pl <- pl +geom_sankey_label(size = 3, color = "black", fill= "white", hjust = -0.5)
# pl <- pl +  theme_bw()
ggplot(df, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = factor(node),
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = 1) +
geom_sankey_label(size = 3.5, color = 1, fill = "white") +
scale_fill_viridis_d() +
theme_sankey(base_size = 16) +
theme(legend.position = "none")
library(networkD3)
library(dplyr)
library(ggplot2)
library(ggsankey)
# A connection data frame is a list of flows with intensity for each flow
links <- data.frame(
source=c("RBP IP Candidates", "RBP IP Candidates",
"Inlcuded at KO library", "Inlcuded at KO library","Not Inlcuded at KO library",
"Included at Screen", "Not Included at Screen", "Not Included at Screen", "Not Included at Screen"),
target=c("Not Inlcuded at KO library","Inlcuded at KO library",
"Included at Screen","Not Included at Screen", "Not Included at Screen",
"Not Essential", "Not Essential", "Essential", "Unknown"),
value=c(22,18,
15,3, 22, 15, 4, 19, 2)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
links <- data.frame(
source=c("RBP IP baits", "RBP IP baits",
"Not essential gene","Not essential gene", "Essential gene",
"Inlcuded at KO library", "Inlcuded at KO library", "Not inlcuded at KO library"),
target=c("Essential gene","Not essential gene",
"Inlcuded at KO library", "Not inlcuded at KO library", "Not inlcuded at KO library",
"Included at KO screen", "Not included at KO screen", "Not included at KO screen"),
value=c(21,19,
18, 1, 21,
15, 3, 22)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
# Make the Network
p <- sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE)
p
setwd("C:/Users/afradera/Desktop/Bureucracy/CV/Mainz_BFCF")
my_df <- read_csv("data/my_network_data.csv")
library(dplyr)
my_df <- read.csv("data/my_network_data.csv")
my_relevant_df <- my_df %>% dplyr::select(title, section, start, end)
current_year <- lubridate::year(lubridate::ymd(Sys.Date()))
my_relevant_df$start <- as.numeric(my_relevant_df$start)
my_relevant_df$end <- as.numeric(my_relevant_df$end)
my_relevant_df$filter <- interaction(is.na(my_relevant_df$start),is.na(my_relevant_df$end))
my_relevant_df <- my_relevant_df[!my_relevant_df$filter == "TRUE.TRUE",]
my_relevant_df <- my_relevant_df %>% dplyr::select(title, section, start, end)
my_relevant_df <- my_relevant_df %>% dplyr::mutate(start = ifelse(is.na(start), end, start))
my_relevant_df <- my_relevant_df %>% dplyr::mutate(end = ifelse(is.na(end), current_year, end))
edges <- my_relevant_df
edges <- edges %>% dplyr::mutate(id = dplyr::row_number())
edges <- edges %>% dplyr::select(id, start, end)
combination_indices <- function(n) {
rep_counts <- (n:1) - 1
dplyr::tibble(a = rep(1:n, times = rep_counts), b = purrr::flatten_int(purrr::map(rep_counts,
~{
tail(1:n, .x)
})))
}
edges <- edges %>% purrr::pmap_dfr(function(id,
start, end) {
dplyr::tibble(year = start:end, id = id)
})
edges <-  edges %>% dplyr::group_by(year) %>% tidyr::nest() %>% dplyr::rename(ids_for_year = data)
edges <- edges %>% purrr::pmap_dfr(function(year, ids_for_year) {
combination_indices(nrow(ids_for_year)) %>% dplyr::transmute(year = year,
from = ids_for_year$id[a], to = ids_for_year$id[b])
})
nodes <- my_relevant_df
nodes <- nodes %>% dplyr::mutate(id = dplyr::row_number())
nodes <- nodes %>% dplyr::select(id, title, section)
nodes <- nodes %>% dplyr::mutate(section = stringr::str_to_title(stringr::str_replace_all(section, "_", " ")))
library(visNetwork)
plot <- visNetwork(nodes, edges)%>%
visIgraphLayout(layout = "layout_nicely", randomSeed = 666)%>%
visOptions(highlightNearest = list(hover = T))
plot <- visNetwork(nodes, edges)%>%
visIgraphLayout(layout = "layout_nicely", randomSeed = 666)%>%
visOptions(highlightNearest = list(hover = T))
plot
plot$sizingPolicy$browser$fill <- TRUE
visSave(graph = plot,file = "plot1.html",selfcontained = T)
source("C:/Users/afradera/Desktop/Bureucracy/CV/Mainz_BFCF/network_plot.R", echo=TRUE)
setwd("C:/Users/afradera/Desktop/Bureucracy/CV/Mainz_BFCF")
source("C:/Users/afradera/Desktop/Bureucracy/CV/Mainz_BFCF/render_cv.R", echo=TRUE)
source("C:/Users/afradera/Desktop/Bureucracy/CV/Mainz_BFCF/render_cv.R", echo=TRUE)
